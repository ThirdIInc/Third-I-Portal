/**
 * 
 */
package org.paradyne.sql.TravelManagement.ExpenseClaim;

import org.paradyne.lib.SqlBase;

/**
 * @author AA0651
 *
 */
public class ExpenseClaimAppModelSql extends SqlBase {
	public String getQuery(int id) {
		// TODO Auto-generated method stub
		switch(id)
		{
			
			case 1: return "INSERT INTO HRMS_TMS_EXP_APP (EXP_APP_ID,EXP_APP_EMPID, EXP_APP_APPDATE, EXP_APP_STATUS, EXP_APP_EXPAMT, "
			+ " EXP_APP_PREF_PAYMODE, EXP_APP_COMMENT ,"
			+ " EXP_APP_TRAVEL_APPID, EXP_APP_ADVANCE_AMT,EXP_APP_BANK_NAME, EXP_APP_ACCOUNT_NO, EXP_APP_SAL_MON, EXP_APP_SAL_YEAR,"
			+ " EXP_TRAVEL_REQUEST,EXP_APP_POLICY_ID)"
			+ "VALUES((SELECT NVL(MAX(EXP_APP_ID),0)+1 FROM HRMS_TMS_EXP_APP ),?,TO_DATE(?,'DD-MM-YYYY'),?,?,?,?,?,?,NVL(?,''),NVL(?,''),NVL(?,''),NVL(?,''),?,?)";
			
			case 2:return "INSERT INTO HRMS_TMS_EXP_DTL ( EXP_DTL_ID,EXP_DTL_EXP_APPID, EXP_DTL_ISPROOF, EXP_DTL_PARTICULAR,"
			+ " EXP_DTL_UPLOAD_FILENAME,EXP_DTL_VCH_AMT, EXP_DTL_VCH_HEAD,EXP_DTL_EXP_DATE,"
			+ " EXP_DTL_VALID_AMT)VALUES((SELECT NVL(MAX(EXP_DTL_ID),0)+1 FROM HRMS_TMS_EXP_DTL ),?,?,?,?,?,?,TO_DATE(?,'DD-MM-YYYY'),?)";
			
			
			case 3:return  "UPDATE HRMS_TMS_EXP_DTL SET EXP_DTL_VCH_HEAD=?, EXP_DTL_VCH_AMT=?, EXP_DTL_ISPROOF=?, EXP_DTL_PARTICULAR=?,"
				+ " EXP_DTL_UPLOAD_FILENAME=?,EXP_DTL_EXP_DATE=?, EXP_DTL_VALID_AMT=? WHERE EXP_DTL_EXP_APPID=?";
			
						
			case 4: return " DELETE FROM HRMS_TMS_EXP_APP WHERE EXP_APP_ID=?";
			
			case 5: return "UPDATE HRMS_TMS_EXP_APP SET EXP_APP_EMPID=?, EXP_APP_APPDATE=TO_DATE(?,'DD-MM-YYYY'), EXP_APP_STATUS=?, EXP_APP_EXPAMT=?, EXP_APP_PREF_PAYMODE=?,"
				+ " EXP_APP_COMMENT=? , EXP_APP_TRAVEL_APPID=?, EXP_APP_ADVANCE_AMT=?,"
				+ " EXP_APP_BANK_NAME=?, EXP_APP_ACCOUNT_NO=?, EXP_APP_SAL_MON=?, EXP_APP_SAL_YEAR=?, EXP_TRAVEL_REQUEST=? ,EXP_APP_POLICY_ID=? "
				+ " WHERE EXP_APP_ID=?";
			
			
			case 6 : return "INSERT INTO HRMS_TMS_EXP_APP_PATH (EXP_APP_PATH_ID, EXP_APP_PATH_APPROVER_CODE, EXP_APP_PATH_APPROVER_DATE, EXP_APP_PATH_APPROVER_REMARK, EXP_APP_PATH_STATUS) " 
						+" VALUES(?, ?, TO_DATE(TO_CHAR(SYSDATE,'DD-MM-YYYY'),'DD-MM-YYYY'), ?, ?)";
			
			
			
			case 7 : return "SELECT (HRMS_EMP_OFFC.EMP_FNAME||' '||HRMS_EMP_OFFC.EMP_MNAME|| ' ' || HRMS_EMP_OFFC.EMP_LNAME),NVL(EXP_APP_PATH_APPROVER_REMARK,''),"
			+ " TO_CHAR(EXP_APP_PATH_APPROVER_DATE,'DD-MM-YYYY'),"
			+ " DECODE(EXP_APP_PATH_STATUS,'P','Pending','R','Rejected','A','Approved')  FROM HRMS_TMS_EXP_APP_PATH"
			+ " INNER JOIN HRMS_EMP_OFFC ON (HRMS_EMP_OFFC.EMP_ID=HRMS_TMS_EXP_APP_PATH.EXP_APP_PATH_APPROVER_CODE)"
			+ " WHERE EXP_APP_PATH_ID =? ORDER BY EXP_APP_PATH_APPROVER_DATE";
			
			
			case 8: return "INSERT INTO HRMS_TMS_EXP_APP (EXP_APP_ID,EXP_APP_EMPID, EXP_APP_APPDATE, EXP_APP_STATUS, EXP_APP_EXPAMT, "
			+ " EXP_APP_PREF_PAYMODE, EXP_APP_COMMENT, EXP_APP_LEVEL, EXP_APP_APPROVER, EXP_APP_ALTER_APPROVER,"
			+ " EXP_APP_TRAVEL_APPID, EXP_APP_ADVANCE_AMT,EXP_APP_BANK_NAME, EXP_APP_ACCOUNT_NO, EXP_APP_SAL_MON, EXP_APP_SAL_YEAR,"
			+ " EXP_TRAVEL_REQUEST,EXP_APP_POLICY_ID)"
			+ "VALUES((SELECT NVL(MAX(EXP_APP_ID),0)+1 FROM HRMS_TMS_EXP_APP ),?,TO_DATE(?,'DD-MM-YYYY'),?,?,?,?,?,?,?,?,?,NVL(?,''),NVL(?,''),NVL(?,''),NVL(?,''),?,?)";
			
			
			case 9: return "UPDATE HRMS_TMS_EXP_APP SET EXP_APP_EMPID=?, EXP_APP_APPDATE=TO_DATE(?,'DD-MM-YYYY'), EXP_APP_STATUS=?, EXP_APP_EXPAMT=?, EXP_APP_PREF_PAYMODE=?,"
			+ " EXP_APP_COMMENT=?, EXP_APP_LEVEL=?, EXP_APP_APPROVER=?, EXP_APP_ALTER_APPROVER=?, EXP_APP_TRAVEL_APPID=?, EXP_APP_ADVANCE_AMT=?,"
			+ " EXP_APP_BANK_NAME=?, EXP_APP_ACCOUNT_NO=?, EXP_APP_SAL_MON=?, EXP_APP_SAL_YEAR=?, EXP_TRAVEL_REQUEST=? ,EXP_APP_POLICY_ID=?"
			+ " WHERE EXP_APP_ID=?";
			
			default:return "Framework could not EXECUTE the query number specified"; 
		}
	
		
	}

}
