package org.paradyne.sql.vendor;
/**
 * @ author Archana Salunkhe
 * @ purpose : Provide Invoice Acceptance Functionality
 * @ Date : 19-Apr-2012 
 */
import org.paradyne.lib.SqlBase;

public class InvoiceAcceptanceModelSql  extends SqlBase{
	
	public String getQuery(int queryId){
		
		switch(queryId){
		
		case 1:
		 return "SELECT PARTNER_NAME,TO_CHAR(VENDOR_INVOICE.INVOICE_DATE, 'DD-MM-YYYY'), VENDOR_INFO.PARTNER_CODE," 
			    +" VENDOR_INVOICE.INVOICE_ID,VENDOR_INVOICE.INVOICE_STATUS"
				+" FROM VENDOR_INVOICE" 
				+" INNER JOIN VENDOR_INFO ON (VENDOR_INFO.PARTNER_LOGIN_CODE = VENDOR_INVOICE.PARTNER_CODE)"
				+" INNER JOIN VENDOR_REPORTING_STR ON(VENDOR_REPORTING_STR.PARTNER_CODE = VENDOR_INVOICE.PARTNER_CODE)" 
				+" WHERE VENDOR_REPORTING_STR.APPROVER_TYPE='Ack'AND VENDOR_INVOICE.INVOICE_STATUS=?" 
			    +" AND VENDOR_REPORTING_STR.APPROVER_CODE =?";
		 
		case 2:
			return "SELECT VENDOR_INFO.PARTNER_LOGIN_CODE, TO_CHAR(INVOICE_DATE,'DD-MM-YYYY'), PARTNER_TYPE,"  
					+" TO_CHAR(INVOICE_FROM_DATE,'DD-MM-YYYY'),TO_CHAR(INVOICE_TO_DATE,'DD-MM-YYYY'), NVL(INVOICE_PROJECT,' '),"
					+" NVL(PARTNER_GOAL_DTL,' '), NVL(INVOICE_NUMBER,0), NVL(INVOICE_DOCUMENT,' '),NVL(INVOICE_AMOUNT,0)," 
					+" NVL(PARTNER_COMMENTS,' '), INVOICE_STATUS,INVOICE_APPROVER, INVOICE_LEVEL," 
					+" INVOICE_ID,VENDOR_INFO.PARTNER_NAME,TO_CHAR(EXPECTED_DISB_DATE,'DD-MM-YYYY')" 
					+" FROM VENDOR_INVOICE"  
					+" INNER JOIN VENDOR_INFO ON (VENDOR_INVOICE.PARTNER_CODE = VENDOR_INFO.PARTNER_LOGIN_CODE)" 
					+" WHERE VENDOR_INVOICE.INVOICE_ID = ?";
		case 3:
			return "SELECT VENDOR_INFO.PARTNER_CODE, VENDOR_INFO.PARTNER_NAME FROM VENDOR_INFO" 
					 +" INNER JOIN VENDOR_INVOICE ON (VENDOR_INVOICE.PARTNER_CODE = VENDOR_INFO.PARTNER_LOGIN_CODE)" 
					 +" WHERE VENDOR_INFO.PARTNER_LOGIN_CODE = ?";
			
		case 4:
			return "SELECT EMP_TOKEN,(EMP_FNAME ||' '||EMP_MNAME ||' '|| EMP_LNAME ||' ')," 
					+" TO_CHAR(INVOICE_APPROVE_DATE,'DD-MM-YYYY'), " 
					+" DECODE(INVOICE_STATUS,'D','Draft','P','Pending','B','Sent Back','A','Approved','R','Rejected')," 
					+" INVOICE_APPR_COMMENTS,INVOICE_APPROVED_BY FROM VENDOR_INVOICE_PATH"
					+" INNER JOIN HRMS_EMP_OFFC ON (VENDOR_INVOICE_PATH.INVOICE_APPROVED_BY = HRMS_EMP_OFFC.EMP_ID)"
					+" WHERE INVOICE_APPL_ID = ?"
					+" ORDER BY VENDOR_INVOICE_PATH.INVOICE_PATH_ID";
		case 5:
			return "UPDATE VENDOR_INVOICE SET INVOICE_STATUS=?,EXPECTED_DISB_DATE = TO_DATE(?,'DD-MM-YYYY')" 
					+" WHERE INVOICE_STATUS='A' AND INVOICE_ID=?";
		
		case 6:
			return "SELECT APPROVER_CODE FROM VENDOR_REPORTING_STR WHERE PARTNER_CODE=? AND APPROVER_TYPE='Mgr' AND APPROVER_LEVEL='1'";
		default : 
			 return "Query not Found";
		}
		
	}

}
