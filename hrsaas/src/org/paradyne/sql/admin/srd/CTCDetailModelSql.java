package org.paradyne.sql.admin.srd;

import org.paradyne.lib.SqlBase;

/**
 * @author Prajakta.Bhandare
 * @date 11 Jan 2013
 */
public class CTCDetailModelSql extends SqlBase {//start class
	public String getQuery(int id) {
		switch (id) {//start switch
		case 1:
			return "SELECT HRMS_CENTER.CENTER_NAME, HRMS_RANK.RANK_NAME, NVL(SALGRADE_TYPE,' '),"
					+ " SALGRADE_CODE, NVL(HRMS_SALARY_MISC.GROSS_AMT,0),"
					+ " DECODE(HRMS_SALARY_MISC.SAL_EPF_FLAG,'Y','true','N','false'), NVL(SAL_ACCNO_REGULAR,' '),"
					+ " NVL(SAL_PANNO,' '), NVL(DEPT_NAME,' '), DEPT_ID , NVL(TO_CHAR(EMP_REGULAR_DATE,'DD-MM-YYYY'),' '),"
					+ " NVL(CADRE_NAME,' '), HRMS_EMP_OFFC.EMP_CADRE,HRMS_EMP_OFFC.EMP_TOKEN, "
					+ "  HRMS_TITLE.TITLE_NAME||' '|| HRMS_EMP_OFFC.EMP_FNAME||' '||HRMS_EMP_OFFC.EMP_MNAME||' '||HRMS_EMP_OFFC.EMP_LNAME, NVL(CTC,0) FROM HRMS_EMP_OFFC "
					+ " INNER JOIN HRMS_RANK ON (HRMS_RANK.RANK_ID=HRMS_EMP_OFFC.EMP_RANK)"
					+ " INNER JOIN HRMS_CENTER ON (HRMS_EMP_OFFC.EMP_CENTER = HRMS_CENTER.CENTER_ID)"
					+ " LEFT JOIN HRMS_TITLE ON (HRMS_EMP_OFFC.EMP_TITLE_CODE = HRMS_TITLE.TITLE_CODE)"
					+ " LEFT JOIN HRMS_DEPT ON (HRMS_DEPT.DEPT_ID = HRMS_EMP_OFFC.EMP_DEPT )"
					+ " LEFT JOIN HRMS_CADRE ON (HRMS_CADRE.CADRE_ID = HRMS_EMP_OFFC.EMP_CADRE)"
					+ " LEFT JOIN HRMS_SALGRADE_HDR ON(HRMS_EMP_OFFC.EMP_SAL_GRADE=HRMS_SALGRADE_HDR.SALGRADE_CODE)"
					+ " LEFT JOIN HRMS_SALARY_MISC ON(HRMS_SALARY_MISC.EMP_ID = HRMS_EMP_OFFC.EMP_ID)"
					+ " LEFT JOIN HRMS_FORMULABUILDER_HDR ON(HRMS_FORMULABUILDER_HDR.FORMULA_ID = HRMS_SALARY_MISC.FORMULA_ID)"
					+ " WHERE HRMS_EMP_OFFC.EMP_ID=?";

		case 2:
			return "SELECT  NVL(HRMS_SALARY_MISC.CTC,0), HRMS_SALARY_MISC.FORMULA_ID, NVL(HRMS_FORMULABUILDER_HDR.FORMULA_NAME,' '), NVL(SALGRADE_TYPE,' '), HRMS_SALGRADE_HDR.SALGRADE_CODE, NVL(GROSS_AMT,0) "
					+ " FROM HRMS_EMP_OFFC "
					+ " LEFT JOIN HRMS_SALGRADE_HDR ON(HRMS_EMP_OFFC.EMP_SAL_GRADE=HRMS_SALGRADE_HDR.SALGRADE_CODE)"
					+ " LEFT JOIN HRMS_SALARY_MISC ON(HRMS_SALARY_MISC.EMP_ID = HRMS_EMP_OFFC.EMP_ID) "
					+ " LEFT JOIN HRMS_FORMULABUILDER_HDR ON(HRMS_FORMULABUILDER_HDR.FORMULA_ID = HRMS_SALARY_MISC.FORMULA_ID)"
					+ " WHERE HRMS_EMP_OFFC.EMP_ID=?";

		case 3:
			return "SELECT HRMS_PROMOTION.PROM_CODE, TO_CHAR(HRMS_PROMOTION.EFFECT_DATE,'MONTH-YYYY')"
					+ " AS PERIOD FROM HRMS_PROMOTION WHERE EMP_CODE=?"
					+ " AND HRMS_PROMOTION.LOCK_FLAG='Y' ORDER BY HRMS_PROMOTION.PROM_CODE DESC";
		case 4:
			return "SELECT DISTINCT HRMS_CREDIT_HEAD.CREDIT_CODE ,HRMS_CREDIT_HEAD.CREDIT_NAME ,"
					+ " CASE WHEN CREDIT_PERIODICITY='M' THEN 'Monthly' WHEN CREDIT_PERIODICITY='Q' THEN 'Quarterly'"
					+ " WHEN CREDIT_PERIODICITY='A' THEN 'Annually' WHEN CREDIT_PERIODICITY='H' THEN 'Half Yearly' ELSE ' ' END, "
					+ " NVL(CREDIT_AMT,0), DECODE(CREDIT_PERIODICITY,'H','3','A','4','Q','2','M','1') AS ORD "
					+ " FROM HRMS_EMP_CREDIT "
					+ " RIGHT JOIN HRMS_CREDIT_HEAD ON (HRMS_CREDIT_HEAD.CREDIT_CODE = HRMS_EMP_CREDIT.CREDIT_CODE AND EMP_ID=?"
					+ ") ORDER BY ORD ,HRMS_CREDIT_HEAD.CREDIT_CODE";

		case 5:
			return " SELECT SAL_CODE, SAL_TYPE,SAL_FORMULA FROM HRMS_FORMULABUILDER_HDR "
					+ " INNER JOIN HRMS_FORMULABUILDER_DTL ON(HRMS_FORMULABUILDER_DTL.FORMULA_ID = HRMS_FORMULABUILDER_HDR.FORMULA_ID) "
					+ " WHERE HRMS_FORMULABUILDER_HDR.FORMULA_ID = ?"
					+ " ORDER BY SAL_CODE";

		case 6:
			return " SELECT COUNT(*),HRMS_CREDIT_HEAD.CREDIT_PERIODICITY FROM HRMS_CREDIT_HEAD "
					+ " GROUP BY HRMS_CREDIT_HEAD.CREDIT_PERIODICITY";

		case 7:
			return "SELECT  NVL(ROUND(SUM(CASE WHEN HRMS_CREDIT_HEAD.CREDIT_PERIODICITY ='M' THEN  NVL(HRMS_EMP_CREDIT.CREDIT_AMT,0) * 12  WHEN HRMS_CREDIT_HEAD.CREDIT_PERIODICITY ='Q' THEN  NVL(HRMS_EMP_CREDIT.CREDIT_AMT,0) * 4 WHEN HRMS_CREDIT_HEAD.CREDIT_PERIODICITY ='H' THEN  NVL(HRMS_EMP_CREDIT.CREDIT_AMT,0) * 2 WHEN HRMS_CREDIT_HEAD.CREDIT_PERIODICITY ='A' THEN  NVL(HRMS_EMP_CREDIT.CREDIT_AMT,0) * 1 ELSE  0 END )),0)"
					+ " FROM HRMS_CREDIT_HEAD "
					+ " LEFT JOIN HRMS_EMP_CREDIT ON (HRMS_CREDIT_HEAD.CREDIT_CODE=HRMS_EMP_CREDIT.CREDIT_CODE) "
					+ " WHERE HRMS_EMP_CREDIT.EMP_ID=? AND HRMS_CREDIT_HEAD .CREDIT_IS_CTC_COMPONENT='Y'";

		case 8:
			return " DELETE FROM HRMS_EMP_CREDIT WHERE EMP_ID=?";

		case 9:
			return " INSERT INTO HRMS_EMP_CREDIT (CREDIT_CODE,CREDIT_APPLICABLE,CREDIT_AMT,EMP_ID) "
					+ " VALUES(?,?,?,?)";

		case 10:
			return " UPDATE HRMS_EMP_CREDIT SET CREDIT_AMT=? WHERE CREDIT_CODE=? AND EMP_ID=?";

		case 11:
			return " UPDATE HRMS_EMP_OFFC SET EMP_SAL_GRADE = ? WHERE EMP_ID=? ";

		case 12:
			return " UPDATE HRMS_SALARY_MISC SET FORMULA_ID=?, GROSS_AMT=?, "
					+ " TOT_MONTHLY_SAL = ?,TOT_ANNUAL_SAL =?,"
					+ " TOT_ANNUAL_PERQUISITE =?,CTC =? " + " WHERE EMP_ID=?";

		default:
			return "Framework could not EXECUTE the query number specified";
		}//end switch

	}

}//end class
