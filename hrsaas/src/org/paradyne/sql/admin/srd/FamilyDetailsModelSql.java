package org.paradyne.sql.admin.srd;

import org.paradyne.lib.SqlBase;

public class FamilyDetailsModelSql extends SqlBase {

	public String getQuery(int id) {
		switch (id) {

		case 1:
			return " INSERT INTO HRMS_EMP_FML (EMP_ID,FML_ID,FML_FNAME,FML_MNAME,FML_LNAME,FML_RELATION,FML_MARITAL_STATUS,"
					+ " FML_GENDER,FML_PH,FML_PROFESSION,FML_IDMARK,FML_EMAIL,FML_DOB,FML_ADDRESS,FML_ISALIVE,FML_ISDEPENDENT,FML_SPOUSE_PHOTO,FML_OTHERINFO,FML_EMPLOYMENT_STATUS) "
					+ " VALUES(?,(SELECT NVL(MAX(FML_ID),0)+1 FROM HRMS_EMP_FML),?,?,?,?,?,?,?,?,?,?,TO_DATE(?,'DD-MM-YYYY'),?,?,?,?,?,?)";

		case 2:
			return " SELECT FML_ID,NVL(FML_FNAME||' '||FML_LNAME,' '),FML_RELATION,NVL(RELATION_NAME,' '),"
			+ "getValue('genderType',FML_GENDER), "
			+ " getValue('marriage',FML_MARITAL_STATUS), DECODE(FML_ISALIVE,'Y','Yes','N','No'),DECODE(FML_ISDEPENDENT,'Y','Yes','N','No'),"
			+ "NVL(FML_SPOUSE_PHOTO,' '),DECODE(FML_EMPLOYMENT_STATUS,'E','Employed','U','Unemployed'),NVL(FML_PH,' '),NVL(FML_PROFESSION,' ')"
			+ " ,NVL(FML_EMAIL,' '),NVL(FML_IDMARK,' '),NVL(TO_CHAR(FML_DOB,'DD-MM-YYYY'),' '),NVL(FML_ADDRESS,' '),NVL(FML_OTHERINFO,' '),NVL(FML_SPOUSE_PHOTO,' ') "
			+ " FROM HRMS_EMP_FML  "
			+ " LEFT JOIN HRMS_EMP_OFFC ON(HRMS_EMP_OFFC.EMP_ID=HRMS_EMP_FML.EMP_ID) LEFT JOIN HRMS_RELATION "
			+ " ON(HRMS_RELATION.RELATION_CODE=HRMS_EMP_FML.FML_RELATION) "
			+ " LEFT JOIN HRMS_RANK ON (HRMS_RANK.RANK_ID = HRMS_EMP_OFFC.EMP_RANK) "
			+ "LEFT JOIN HRMS_CENTER ON(HRMS_CENTER.CENTER_ID=HRMS_EMP_OFFC.EMP_CENTER)"
			+ "LEFT JOIN HRMS_TITLE ON (HRMS_TITLE.TITLE_CODE = HRMS_EMP_OFFC.EMP_TITLE_CODE)"
			+ " WHERE HRMS_EMP_OFFC.EMP_ID = ? ORDER BY FML_DOB ";

		case 3:
			return " SELECT NVL(FML_FNAME,' '),NVL(FML_MNAME,' '),NVL(FML_LNAME,' '),FML_RELATION,NVL(RELATION_NAME,' '),FML_MARITAL_STATUS,"
					+ " FML_GENDER ,FML_PH,NVL(FML_PROFESSION,' ') ,"
					+ " NVL(FML_IDMARK,' '),NVL(FML_EMAIL,' '),TO_CHAR(FML_DOB,'DD-MM-YYYY'),NVL(FML_ADDRESS,' '),FML_ID,FML_ISALIVE,FML_ISDEPENDENT,NVL(FML_SPOUSE_PHOTO,' '),NVL(FML_OTHERINFO,' '),FML_EMPLOYMENT_STATUS FROM HRMS_EMP_FML"
					+ " LEFT JOIN HRMS_RELATION ON(HRMS_RELATION.RELATION_CODE=HRMS_EMP_FML.FML_RELATION) "
					+ " WHERE  FML_ID=?	AND HRMS_EMP_FML.EMP_ID =? ";

		case 4:
			return " UPDATE HRMS_EMP_FML SET FML_FNAME=?,FML_MNAME=?,FML_LNAME=?,FML_RELATION=?,FML_MARITAL_STATUS=?,"
					+ " FML_GENDER=? ,FML_PH=?,FML_PROFESSION=? ,FML_IDMARK=?,FML_EMAIL=?,"
					+ " FML_DOB=TO_DATE(?,'DD-MM-YYYY'),FML_ADDRESS=? ,FML_ISALIVE=?,FML_ISDEPENDENT=?,FML_SPOUSE_PHOTO=?,FML_OTHERINFO=? ,FML_EMPLOYMENT_STATUS=? WHERE  FML_ID=? ";

		case 5:
			return "DELETE FROM HRMS_EMP_FML WHERE FML_ID = ?";

		case 6:
			return " SELECT NVL(FML_FNAME,' '),FML_RELATION,NVL(RELATION_NAME,' '),TO_CHAR(FML_DOB,'DD-MM-YYYY') FROM HRMS_EMP_FML"
					+ " LEFT JOIN HRMS_RELATION ON(HRMS_RELATION.RELATION_CODE=HRMS_EMP_FML.FML_RELATION)"
					+ " WHERE HRMS_EMP_FML.EMP_ID =? ";
		

		default:
			return "";
		}
	}
}