package org.paradyne.sql.PAS;

import org.paradyne.lib.SqlBase;

public class RatingScaleDefinitionModelSql extends SqlBase {
	
	public String getQuery(int id) 
	{
		switch (id) {
				
				case 1 : return " SELECT APPR_RATING_ID, A.APPR_ID, APPR_CAL_CODE, TO_CHAR(APPR_CAL_START_DATE,'DD-MM-YYYY'),TO_CHAR(APPR_CAL_END_DATE,'DD-MM-YYYY') " + 
							    " FROM PAS_APPR_CALENDAR A , PAS_APPR_QUESTION_RATING_HDR B " +
							    " WHERE A.APPR_ID = B.APPR_ID " +
							    " ORDER BY B.APPR_RATING_ID ";
			
				/* Insert Data */	
				
				case 2 : return " INSERT INTO PAS_APPR_QUESTION_RATING_HDR (APPR_RATING_ID, APPR_ID, APPR_MIN_RATING, APPR_MAX_RATING, APPR_ALLOW_FRACTION, APPR_RATING_TOLERANCE, APPR_RATING_TYPE) VALUES " +
								" ((SELECT NVL(MAX(APPR_RATING_ID),0)+1 FROM PAS_APPR_QUESTION_RATING_HDR),?,?,?,?,?,?) ";
				
				case 3 : return " INSERT INTO PAS_APPR_QUESTION_RATING_DTL (APPR_RATING_ID, DTL_ID, APPR_ID, APPR_RATING_VALU, APPR_RATING_DESC) " +
								" VALUES ((SELECT MAX(APPR_RATING_ID) FROM PAS_APPR_QUESTION_RATING_HDR),?,?,?,?) ";
				
				case 4 : return " INSERT INTO PAS_APPR_OVERALL_RATING (APPR_SCORE_ID, APPR_ID, APPR_SCORE_FROM, APPR_SCORE_TO, APPR_SCORE_VALUE, " +
								" APPR_SCORE_DESCRIPTION, APPR_BELL_PERCENTAGE) VALUES(?,?,?,?,?,?,?) ";

				case 5 : return " SELECT APPR_RATING_ID,APPR_MIN_RATING,APPR_MAX_RATING,APPR_ALLOW_FRACTION,APPR_RATING_TOLERANCE,APPR_RATING_TYPE " +
								" FROM PAS_APPR_QUESTION_RATING_HDR WHERE APPR_ID = ? ";
				
				case 6 : return " SELECT DTL_ID, APPR_RATING_VALU, APPR_RATING_DESC " +
								" FROM PAS_APPR_QUESTION_RATING_DTL WHERE APPR_ID = ? ";
				
				case 7 : return " SELECT APPR_SCORE_ID, APPR_SCORE_FROM, APPR_SCORE_TO, APPR_SCORE_VALUE, APPR_SCORE_DESCRIPTION, APPR_BELL_PERCENTAGE " +
								" FROM PAS_APPR_OVERALL_RATING WHERE APPR_ID = ? ";
				
				/* Delete Data */
				
				case 8 : return " DELETE FROM PAS_APPR_QUESTION_RATING_HDR WHERE APPR_ID = ? ";	
				
				case 9 : return " DELETE FROM PAS_APPR_QUESTION_RATING_DTL WHERE APPR_ID = ? ";	
				
				case 10 : return " DELETE FROM PAS_APPR_OVERALL_RATING WHERE APPR_ID = ? ";	
				
				case 11 : return " SELECT NVL(MAX(APPR_SCORE_ID),0)+1 FROM PAS_APPR_OVERALL_RATING ";
				
				case 12 : return " SELECT APPR_ID ,APPR_CAL_CODE, TO_CHAR(APPR_CAL_START_DATE,'DD-MM-YYYY'),TO_CHAR(APPR_CAL_END_DATE,'DD-MM-YYYY'),NVL(APPR_CAL_IS_STARTED,'N')  FROM PAS_APPR_CALENDAR WHERE APPR_ID = ? ";
				
				/* Update Data */
				
				case 13 : return "UPDATE PAS_APPR_QUESTION_RATING_HDR SET APPR_MIN_RATING=?, APPR_MAX_RATING=?, APPR_ALLOW_FRACTION=?, APPR_RATING_TOLERANCE=?,APPR_RATING_TYPE=? WHERE APPR_ID = ? AND APPR_RATING_ID=? ";
				
				case 14 : return "UPDATE PAS_APPR_QUESTION_RATING_DTL SET APPR_RATING_VALU = ?, APPR_RATING_DESC = ?  WHERE APPR_ID = ? AND DTL_ID = ?";
				
				case 15 : return "UPDATE PAS_APPR_OVERALL_RATING SET APPR_SCORE_FROM=?, APPR_SCORE_TO=?, APPR_SCORE_VALUE=?, APPR_SCORE_DESCRIPTION=?, APPR_BELL_PERCENTAGE=? WHERE APPR_ID = ? AND APPR_SCORE_ID = ?";
				
				case 16 : return " SELECT NVL(MAX(DTL_ID),0)+1 FROM PAS_APPR_QUESTION_RATING_DTL ";
				
				default : return " Framework could not the query number specified";
			
		}
		
	}

}
