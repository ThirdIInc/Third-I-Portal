package org.paradyne.sql.PAS;


import org.paradyne.lib.SqlBase;

public class ApprFormDiscpMeasuresModelSql extends SqlBase {

	
	public String getQuery(int i){
		
		switch(i){
				
			case 1 : return " SELECT APPR_DISCIPLINARY_FLAG FROM PAS_APPR_TEMPLATE WHERE APPR_ID=? AND APPR_TEMPLATE_ID=?";
			
			case 2 : return " SELECT APPR_PHASE_VISIBILITY, APPR_PHASE_COMMENT FROM PAS_APPR_COMMON_SECTION "
			   				+" WHERE APPR_ID = ? AND APPR_TEMPLATE_ID= ? AND APPR_PHASE = ? AND APPR_SECTION_TYPE = 'D'";

			case 3 : return " SELECT NVL(APPR_DISCP_ACTION,' '), NVL(APPR_DISCP_AUTHORITY,' '), TO_CHAR(APPR_DISCP_DATE,'DD-MM-YYYY'), APPR_DISCP_ID FROM PAS_APPR_DISCIPLINARY "
						   +" WHERE APPR_ID=? AND APPR_TEMPLATE_ID=? AND APPR_EMP_ID=? ORDER BY PAS_APPR_DISCIPLINARY.APPR_DISCP_ID ";
			
			case 4: return "INSERT INTO PAS_APPR_DISCIPLINARY(APPR_ID, APPR_TEMPLATE_ID, APPR_EMP_ID, APPR_DISCP_ACTION, APPR_DISCP_AUTHORITY, APPR_DISCP_DATE, APPR_DISCP_ID)VALUES(?,?,?,?,?,TO_DATE(?,'DD-MM-YYYY'),(SELECT NVL(MAX(APPR_DISCP_ID),0)+1 FROM PAS_APPR_DISCIPLINARY ))";
			
			case 5 : return "UPDATE PAS_APPR_DISCIPLINARY SET APPR_DISCP_ACTION=? , APPR_DISCP_AUTHORITY=? , APPR_DISCP_DATE=TO_DATE(?,'DD-MM-YYYY') WHERE APPR_ID=? AND APPR_TEMPLATE_ID=? AND APPR_EMP_ID=? AND APPR_DISCP_ID=?";
			
			case 6 : return "	DELETE FROM PAS_APPR_DISCIPLINARY WHERE APPR_DISCP_ID=?";
			
			case 7 : return " SELECT APPR_PHASE_VISIBILITY, APPR_PHASE_COMMENT FROM PAS_APPR_COMMON_SECTION "
						   +" WHERE APPR_ID = ? AND APPR_TEMPLATE_ID= ? AND APPR_PHASE = ? AND APPR_SECTION_TYPE = 'D'";

			case 8 : return "SELECT NVL(APPR_DISCP_ACTION,' '), NVL(APPR_DISCP_AUTHORITY,' '), TO_CHAR(APPR_DISCP_DATE,'DD-MM-YYYY'),NVL(APPR_DISCP_COMMENTS,' '),"
						   +" PAS_APPR_DISCIPLINARY.APPR_DISCP_ID,PAS_APPR_DISCIPLINARY_COMMENT.APPR_DISCP_ID"
						   +" FROM PAS_APPR_DISCIPLINARY LEFT JOIN PAS_APPR_DISCIPLINARY_COMMENT ON(PAS_APPR_DISCIPLINARY_COMMENT.APPR_ID=PAS_APPR_DISCIPLINARY.APPR_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_TEMPLATE_ID = PAS_APPR_DISCIPLINARY.APPR_TEMPLATE_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_EMP_ID  = PAS_APPR_DISCIPLINARY.APPR_EMP_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_DISCP_ID = PAS_APPR_DISCIPLINARY.APPR_DISCP_ID AND"
						   +" APPR_PHASE=? AND APPR_APPRAISER_ID=?) WHERE PAS_APPR_DISCIPLINARY.APPR_ID=? AND"
						   +" PAS_APPR_DISCIPLINARY.APPR_TEMPLATE_ID=? AND PAS_APPR_DISCIPLINARY.APPR_EMP_ID=? ORDER BY PAS_APPR_DISCIPLINARY.APPR_DISCP_ID ";
			
			case 9 : return " INSERT INTO PAS_APPR_DISCIPLINARY_COMMENT(APPR_ID, APPR_TEMPLATE_ID, APPR_PHASE, APPR_EMP_ID, APPR_DISCP_COMMENTS, APPR_DISCP_ID,APPR_APPRAISER_ID)VALUES(?,?,?,?,?,?,?)";
			
			case 10 : return "UPDATE PAS_APPR_DISCIPLINARY_COMMENT SET APPR_DISCP_COMMENTS=? WHERE APPR_ID=? AND APPR_TEMPLATE_ID=? AND APPR_PHASE=? AND APPR_EMP_ID=? AND APPR_DISCP_ID=? AND APPR_APPRAISER_ID=?";
			
			case 11 : return "SELECT APPR_IS_SELFPHASE FROM PAS_APPR_PHASE_CONFIG WHERE APPR_ID=? AND APPR_PHASE_ID=?";
			
			case 12 : return "SELECT NVL(APPR_DISCP_ACTION,' '), NVL(APPR_DISCP_AUTHORITY,' '), TO_CHAR(APPR_DISCP_DATE,'DD-MM-YYYY'),NVL(APPR_DISCP_COMMENTS,' '),"
						   +" PAS_APPR_DISCIPLINARY.APPR_DISCP_ID,PAS_APPR_DISCIPLINARY_COMMENT.APPR_DISCP_ID, APPR_PHASE_NAME	"
						   +" FROM PAS_APPR_DISCIPLINARY LEFT JOIN PAS_APPR_DISCIPLINARY_COMMENT ON(PAS_APPR_DISCIPLINARY_COMMENT.APPR_ID=PAS_APPR_DISCIPLINARY.APPR_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_TEMPLATE_ID = PAS_APPR_DISCIPLINARY.APPR_TEMPLATE_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_EMP_ID  = PAS_APPR_DISCIPLINARY.APPR_EMP_ID AND"
						   +" PAS_APPR_DISCIPLINARY_COMMENT.APPR_DISCP_ID = PAS_APPR_DISCIPLINARY.APPR_DISCP_ID "
						   +" ) "//AND APPR_PHASE NOT IN (?)
						   +"  INNER JOIN PAS_APPR_PHASE_CONFIG ON(PAS_APPR_PHASE_CONFIG.APPR_PHASE_ID = PAS_APPR_DISCIPLINARY_COMMENT.APPR_PHASE)"
						   +" WHERE PAS_APPR_DISCIPLINARY.APPR_ID=? AND"
						   +" PAS_APPR_DISCIPLINARY.APPR_TEMPLATE_ID=? AND PAS_APPR_DISCIPLINARY.APPR_EMP_ID=?"
						   +" AND("
						   +" PAS_APPR_PHASE_CONFIG.APPR_PHASE_ORDER<"
						   +"(SELECT APPR_PHASE_ORDER FROM PAS_APPR_PHASE_CONFIG WHERE APPR_PHASE_ID=?)" 
						   +"OR (PAS_APPR_PHASE_CONFIG.APPR_PHASE_ORDER="
						   +"(SELECT APPR_PHASE_ORDER FROM PAS_APPR_PHASE_CONFIG WHERE APPR_PHASE_ID=?)  AND APPR_APPRAISER_ID!=?)"
						   +") ORDER BY PAS_APPR_PHASE_CONFIG.APPR_PHASE_ID,PAS_APPR_DISCIPLINARY.APPR_DISCP_ID	";
			
			case 13 : return "SELECT PAS_APPR_PHASE_CONFIG.APPR_PHASE_ID, PAS_APPR_PHASE_CONFIG.APPR_PHASE_NAME, PAS_APPR_PHASE_CONFIG.APPR_PHASE_ORDER,APPR_APPRAISER_LEVEL FROM PAS_APPR_APPRAISER" 
							+" INNER JOIN PAS_APPR_PHASE_CONFIG ON (PAS_APPR_PHASE_CONFIG.APPR_ID=PAS_APPR_APPRAISER.APPR_ID AND"
							+" PAS_APPR_APPRAISER.APPR_PHASE_ID=PAS_APPR_PHASE_CONFIG.APPR_PHASE_ID"
							+")WHERE PAS_APPR_PHASE_CONFIG.APPR_ID=? AND" 
							+" PAS_APPR_PHASE_CONFIG.APPR_PHASE_ID=? AND"
							+" APPR_APPRAISER_CODE=?";
			
			case 14 : return "SELECT MAX(APPR_DISCP_ID) FROM PAS_APPR_DISCIPLINARY";
			
			case 15 : return "	DELETE FROM PAS_APPR_DISCIPLINARY_COMMENT WHERE APPR_DISCP_ID =?";
			
			case 16 : return " SELECT * FROM PAS_APPR_DISCIPLINARY_COMMENT WHERE APPR_DISCP_ID in( ? ) AND APPR_APPRAISER_ID! = ?";
			
			
			default: return "";
		
		}
	}
	
}
