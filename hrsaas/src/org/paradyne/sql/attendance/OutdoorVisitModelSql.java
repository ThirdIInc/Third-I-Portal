/**
 * @author ritac Modified by v.saipavan 29-05-2008
 */
package org.paradyne.sql.attendance;

import org.paradyne.lib.SqlBase;

public class OutdoorVisitModelSql extends SqlBase {
	public String getQuery(int id) {
		switch(id) {
			case 1: return " INSERT INTO HRMS_OUTDOORVISIT (OUTDOORVISIT_CODE, OUTDOORVISIT_ECODE, OUTDOORVISIT_DATE, " +
			" OUTDOORVISIT_FRTIME, OUTDOORVISIT_TOTIME, OUTDOORVISIT_LOCATION, OUTDOORVISIT_PURPOSE, OUTDOORVISIT_APPR, " +
			" OUTDOOR_ALTER_APPROVER, OUTDOOR_APP_LEVEL,APPL_KEEP_INFO,OUTDOORVISIT_STATUS) " +
			" VALUES(?, ?, TO_DATE(?, 'DD-MM-YYYY'), ?, ?, ?, ?, ?, " +
			" ?, 1,?,?)";

			case 2: return " UPDATE HRMS_OUTDOORVISIT SET OUTDOORVISIT_ECODE = ?, OUTDOORVISIT_DATE = TO_DATE(?, 'DD-MM-YYYY')," +
			" OUTDOORVISIT_FRTIME = ?, OUTDOORVISIT_TOTIME = ?, OUTDOORVISIT_LOCATION = ?, OUTDOORVISIT_PURPOSE = ?, " +
			" OUTDOORVISIT_APPR = ?, OUTDOOR_ALTER_APPROVER = ? ,APPL_KEEP_INFO=?,  OUTDOORVISIT_STATUS=? WHERE OUTDOORVISIT_CODE = ?";

			case 3: return " SELECT OUTDOORVISIT_CODE, OUTDOORVISIT_ECODE, (TITLE_NAME || ' ' || EMP_FNAME ||' '|| EMP_MNAME || ' ' || EMP_LNAME) EMP_NAME, " +
			" TO_CHAR(OUTDOORVISIT_DATE, 'DD-MM-YYYY'), EMP_TOKEN, OUTDOORVISIT_FRTIME, OUTDOORVISIT_TOTIME, OUTDOORVISIT_LOCATION, " +
			" OUTDOORVISIT_PURPOSE, OUTDOORVISIT_STATUS ,OUTDOOR_APP_LEVEL ,OUTDOORVISIT_ECODE FROM HRMS_OUTDOORVISIT " + 
			" INNER JOIN HRMS_EMP_OFFC ON(HRMS_OUTDOORVISIT.OUTDOORVISIT_ECODE = HRMS_EMP_OFFC.EMP_ID) " + 
			" LEFT JOIN HRMS_TITLE ON(HRMS_EMP_OFFC.EMP_TITLE_CODE = HRMS_TITLE.TITLE_CODE) " + 
			" WHERE OUTDOORVISIT_CODE = ?";

			case 4: return " SELECT TO_CHAR(OUTDOORVISIT_DATE, 'DD-MM-YYYY'), OUTDOORVISIT_APPR, NVL(OUTDOORVISIT_STATUS, 'P')," +
			" OUTDOOR_APP_LEVEL, OUTDOORVISIT_LOCATION FROM HRMS_OUTDOORVISIT WHERE OUTDOORVISIT_CODE = ?";

			case 5: return " SELECT OUTDOORVISIT_CODE, EMP_CODE, (TITLE_NAME || ' ' || EMP_FNAME || ' ' || EMP_MNAME || ' ' ||EMP_LNAME) EMP_NAME, " +
			" AGE, SERVICE_PERIOD, EMP_TOKEN FROM HRMS_TRN_DTL " + 
			" INNER JOIN HRMS_EMP_OFFC ONHRMS_TRN_DTL.EMP_CODE = HRMS_EMP_OFFC.EMP_ID) " + 
			" LEFT JOIN HRMS_TITLE ON(HRMS_EMP_OFFC.EMP_TITLE_CODE = HRMS_TITLE.TITLE_CODE) " + 
			" WHERE OUTDOORVISIT_CODE = ?";

			case 6: return " DELETE FROM HRMS_OUTDOORVISIT WHERE OUTDOORVISIT_CODE = ?";
			
			case 7: return " DELETE FROM HRMS_OUTDOOR_PATH WHERE OUTDOOR_PATH_OUTCODE = ?";

			default: return "Framework could not EXECUTE the query number specified";
		}
	}
}